//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppleTvLiar.MediaManager {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaImageType", Namespace="http://schemas.datacontract.org/2004/07/IVS.Content.Media.Image")]
    [System.SerializableAttribute()]
    public partial class MediaImageType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaRequest", Namespace="http://schemas.datacontract.org/2004/07/IVS.Content.Media")]
    [System.SerializableAttribute()]
    public partial class MediaRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool clientSidePlaylistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppleTvLiar.MediaManager.ProtoItem itemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppleTvLiar.MediaManager.MediaFormat mediaFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int startOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppleTvLiar.MediaManager.StreamSettings streamSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool clientSidePlaylist {
            get {
                return this.clientSidePlaylistField;
            }
            set {
                if ((this.clientSidePlaylistField.Equals(value) != true)) {
                    this.clientSidePlaylistField = value;
                    this.RaisePropertyChanged("clientSidePlaylist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppleTvLiar.MediaManager.ProtoItem item {
            get {
                return this.itemField;
            }
            set {
                if ((object.ReferenceEquals(this.itemField, value) != true)) {
                    this.itemField = value;
                    this.RaisePropertyChanged("item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppleTvLiar.MediaManager.MediaFormat mediaFormat {
            get {
                return this.mediaFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.mediaFormatField, value) != true)) {
                    this.mediaFormatField = value;
                    this.RaisePropertyChanged("mediaFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int startOffset {
            get {
                return this.startOffsetField;
            }
            set {
                if ((this.startOffsetField.Equals(value) != true)) {
                    this.startOffsetField = value;
                    this.RaisePropertyChanged("startOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppleTvLiar.MediaManager.StreamSettings streamSettings {
            get {
                return this.streamSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.streamSettingsField, value) != true)) {
                    this.streamSettingsField = value;
                    this.RaisePropertyChanged("streamSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProtoItem", Namespace="http://schemas.datacontract.org/2004/07/IVS.Content.Data")]
    [System.SerializableAttribute()]
    public partial class ProtoItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppleTvLiar.MediaManager.ContentType contentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppleTvLiar.MediaManager.KeyValue[] miscField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppleTvLiar.MediaManager.ContentType contentType {
            get {
                return this.contentTypeField;
            }
            set {
                if ((this.contentTypeField.Equals(value) != true)) {
                    this.contentTypeField = value;
                    this.RaisePropertyChanged("contentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public AppleTvLiar.MediaManager.KeyValue[] misc {
            get {
                return this.miscField;
            }
            set {
                if ((object.ReferenceEquals(this.miscField, value) != true)) {
                    this.miscField = value;
                    this.RaisePropertyChanged("misc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaFormat", Namespace="http://schemas.datacontract.org/2004/07/IVS.Content.Media")]
    [System.SerializableAttribute()]
    public partial class MediaFormat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] applicationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] bitrateSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string detailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string displayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string protocolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] applications {
            get {
                return this.applicationsField;
            }
            set {
                if ((object.ReferenceEquals(this.applicationsField, value) != true)) {
                    this.applicationsField = value;
                    this.RaisePropertyChanged("applications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] bitrateSet {
            get {
                return this.bitrateSetField;
            }
            set {
                if ((object.ReferenceEquals(this.bitrateSetField, value) != true)) {
                    this.bitrateSetField = value;
                    this.RaisePropertyChanged("bitrateSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string details {
            get {
                return this.detailsField;
            }
            set {
                if ((object.ReferenceEquals(this.detailsField, value) != true)) {
                    this.detailsField = value;
                    this.RaisePropertyChanged("details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.displayNameField, value) != true)) {
                    this.displayNameField = value;
                    this.RaisePropertyChanged("displayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                if ((this.isActiveField.Equals(value) != true)) {
                    this.isActiveField = value;
                    this.RaisePropertyChanged("isActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string protocol {
            get {
                return this.protocolField;
            }
            set {
                if ((object.ReferenceEquals(this.protocolField, value) != true)) {
                    this.protocolField = value;
                    this.RaisePropertyChanged("protocol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StreamSettings", Namespace="http://schemas.datacontract.org/2004/07/IVS.Common.Server")]
    [System.SerializableAttribute()]
    public partial class StreamSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppleTvLiar.MediaManager.BalancingArea balancingAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppleTvLiar.MediaManager.DeliveryNetwork cdnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppleTvLiar.MediaManager.StreamQualityPreset qualityPresetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string shiftTimeZoneNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppleTvLiar.MediaManager.BalancingArea balancingArea {
            get {
                return this.balancingAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.balancingAreaField, value) != true)) {
                    this.balancingAreaField = value;
                    this.RaisePropertyChanged("balancingArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppleTvLiar.MediaManager.DeliveryNetwork cdn {
            get {
                return this.cdnField;
            }
            set {
                if ((object.ReferenceEquals(this.cdnField, value) != true)) {
                    this.cdnField = value;
                    this.RaisePropertyChanged("cdn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppleTvLiar.MediaManager.StreamQualityPreset qualityPreset {
            get {
                return this.qualityPresetField;
            }
            set {
                if ((this.qualityPresetField.Equals(value) != true)) {
                    this.qualityPresetField = value;
                    this.RaisePropertyChanged("qualityPreset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string shiftTimeZoneName {
            get {
                return this.shiftTimeZoneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.shiftTimeZoneNameField, value) != true)) {
                    this.shiftTimeZoneNameField = value;
                    this.RaisePropertyChanged("shiftTimeZoneName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContentType", Namespace="http://schemas.datacontract.org/2004/07/IVS.Common")]
    public enum ContentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AudioBooks = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DVR = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Games = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Karaoke = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LiveTV = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Music = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Podcast = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Radio = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArcPlus = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VOD = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SVOD = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValue", Namespace="http://schemas.datacontract.org/2004/07/IVS.Common")]
    [System.SerializableAttribute()]
    public partial class KeyValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        private string keyField;
        
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BalancingArea", Namespace="http://schemas.datacontract.org/2004/07/IVS.Common.Server")]
    [System.SerializableAttribute()]
    public partial class BalancingArea : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliveryNetwork", Namespace="http://schemas.datacontract.org/2004/07/IVS.Common.Server")]
    [System.SerializableAttribute()]
    public partial class DeliveryNetwork : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StreamQualityPreset", Namespace="http://schemas.datacontract.org/2004/07/IVS.Common.Server")]
    public enum StreamQualityPreset : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VQ = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SQ = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HQ = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GQ = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EQ = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BQ = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaStream", Namespace="http://schemas.datacontract.org/2004/07/IVS.Content.Media.Stream")]
    [System.SerializableAttribute()]
    public partial class MediaStream : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DARField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MediaFormatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaylistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DAR {
            get {
                return this.DARField;
            }
            set {
                if ((object.ReferenceEquals(this.DARField, value) != true)) {
                    this.DARField = value;
                    this.RaisePropertyChanged("DAR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaFormatID {
            get {
                return this.MediaFormatIDField;
            }
            set {
                if ((this.MediaFormatIDField.Equals(value) != true)) {
                    this.MediaFormatIDField = value;
                    this.RaisePropertyChanged("MediaFormatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Playlist {
            get {
                return this.PlaylistField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaylistField, value) != true)) {
                    this.PlaylistField = value;
                    this.RaisePropertyChanged("Playlist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaTimeZone", Namespace="http://schemas.datacontract.org/2004/07/IVS.Common")]
    [System.SerializableAttribute()]
    public partial class MediaTimeZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool streamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int utcOffsetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool stream {
            get {
                return this.streamField;
            }
            set {
                if ((this.streamField.Equals(value) != true)) {
                    this.streamField = value;
                    this.RaisePropertyChanged("stream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int utcOffset {
            get {
                return this.utcOffsetField;
            }
            set {
                if ((this.utcOffsetField.Equals(value) != true)) {
                    this.utcOffsetField = value;
                    this.RaisePropertyChanged("utcOffset");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaLanguage", Namespace="http://schemas.datacontract.org/2004/07/IVS.Content.Media")]
    [System.SerializableAttribute()]
    public partial class MediaLanguage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iso_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iso_name {
            get {
                return this.iso_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.iso_nameField, value) != true)) {
                    this.iso_nameField = value;
                    this.RaisePropertyChanged("iso_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaApp", Namespace="http://schemas.datacontract.org/2004/07/IVS.Content.Application")]
    [System.SerializableAttribute()]
    public partial class MediaApp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string detailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string details {
            get {
                return this.detailsField;
            }
            set {
                if ((object.ReferenceEquals(this.detailsField, value) != true)) {
                    this.detailsField = value;
                    this.RaisePropertyChanged("details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                if ((this.isActiveField.Equals(value) != true)) {
                    this.isActiveField = value;
                    this.RaisePropertyChanged("isActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProtoItemPos", Namespace="http://schemas.datacontract.org/2004/07/IVS.Content.Data")]
    [System.SerializableAttribute()]
    public partial class ProtoItemPos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AppleTvLiar.MediaManager.ProtoItem itemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int posField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AppleTvLiar.MediaManager.ProtoItem item {
            get {
                return this.itemField;
            }
            set {
                if ((object.ReferenceEquals(this.itemField, value) != true)) {
                    this.itemField = value;
                    this.RaisePropertyChanged("item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pos {
            get {
                return this.posField;
            }
            set {
                if ((this.posField.Equals(value) != true)) {
                    this.posField = value;
                    this.RaisePropertyChanged("pos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ivsmedia.iptv-distribution.net", ConfigurationName="MediaManager.MediaService")]
    public interface MediaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaImageTypes", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaImageTypesResponse")]
        AppleTvLiar.MediaManager.MediaImageType[] GetMediaImageTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaImageTypes", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaImageTypesResponse")]
        System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaImageType[]> GetMediaImageTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/MediaImageUrlTemplate", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/MediaImageUrlTemplateResponse")]
        string MediaImageUrlTemplate(int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/MediaImageUrlTemplate", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/MediaImageUrlTemplateResponse")]
        System.Threading.Tasks.Task<string> MediaImageUrlTemplateAsync(int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetClientStreamUri", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetClientStreamUriResponse")]
        AppleTvLiar.MediaManager.MediaStream GetClientStreamUri(string sessionID, AppleTvLiar.MediaManager.MediaRequest mediaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetClientStreamUri", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetClientStreamUriResponse")]
        System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaStream> GetClientStreamUriAsync(string sessionID, AppleTvLiar.MediaManager.MediaRequest mediaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetAppStreamUri", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetAppStreamUriResponse")]
        AppleTvLiar.MediaManager.MediaStream GetAppStreamUri(int siteID, string appName, AppleTvLiar.MediaManager.MediaRequest mediaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetAppStreamUri", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetAppStreamUriResponse")]
        System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaStream> GetAppStreamUriAsync(int siteID, string appName, AppleTvLiar.MediaManager.MediaRequest mediaRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetUTCOffset", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetUTCOffsetResponse")]
        int GetUTCOffset(string sTimeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetUTCOffset", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetUTCOffsetResponse")]
        System.Threading.Tasks.Task<int> GetUTCOffsetAsync(string sTimeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaZones", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaZonesResponse")]
        string[] GetMediaZones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaZones", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaZonesResponse")]
        System.Threading.Tasks.Task<string[]> GetMediaZonesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaZoneInfo", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaZoneInfoResponse")]
        AppleTvLiar.MediaManager.MediaTimeZone[] GetMediaZoneInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaZoneInfo", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaZoneInfoResponse")]
        System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaTimeZone[]> GetMediaZoneInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/SupportedMediaFormats", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/SupportedMediaFormatsResponse")]
        AppleTvLiar.MediaManager.MediaFormat[] SupportedMediaFormats();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/SupportedMediaFormats", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/SupportedMediaFormatsResponse")]
        System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaFormat[]> SupportedMediaFormatsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/BalancingAreas", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/BalancingAreasResponse")]
        AppleTvLiar.MediaManager.BalancingArea[] BalancingAreas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/BalancingAreas", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/BalancingAreasResponse")]
        System.Threading.Tasks.Task<AppleTvLiar.MediaManager.BalancingArea[]> BalancingAreasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/DeliveryNetworks", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/DeliveryNetworksResponse")]
        AppleTvLiar.MediaManager.DeliveryNetwork[] DeliveryNetworks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/DeliveryNetworks", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/DeliveryNetworksResponse")]
        System.Threading.Tasks.Task<AppleTvLiar.MediaManager.DeliveryNetwork[]> DeliveryNetworksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetAvailableLanguages", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetAvailableLanguagesResponse")]
        AppleTvLiar.MediaManager.MediaLanguage[] GetAvailableLanguages(int siteID, string appName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetAvailableLanguages", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetAvailableLanguagesResponse")]
        System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaLanguage[]> GetAvailableLanguagesAsync(int siteID, string appName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/CountryCodeFromIP", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/CountryCodeFromIPResponse")]
        string CountryCodeFromIP(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/CountryCodeFromIP", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/CountryCodeFromIPResponse")]
        System.Threading.Tasks.Task<string> CountryCodeFromIPAsync(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetCurrentUtcTime", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetCurrentUtcTimeResponse")]
        System.DateTime GetCurrentUtcTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetCurrentUtcTime", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetCurrentUtcTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetCurrentUtcTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaApplications", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaApplicationsResponse")]
        AppleTvLiar.MediaManager.MediaApp[] GetMediaApplications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaApplications", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/GetMediaApplicationsResponse")]
        System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaApp[]> GetMediaApplicationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/StreamProgress", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/StreamProgressResponse")]
        bool StreamProgress(string sessionID, AppleTvLiar.MediaManager.ProtoItemPos item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ivsmedia.iptv-distribution.net/MediaService/StreamProgress", ReplyAction="http://ivsmedia.iptv-distribution.net/MediaService/StreamProgressResponse")]
        System.Threading.Tasks.Task<bool> StreamProgressAsync(string sessionID, AppleTvLiar.MediaManager.ProtoItemPos item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MediaServiceChannel : AppleTvLiar.MediaManager.MediaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MediaServiceClient : System.ServiceModel.ClientBase<AppleTvLiar.MediaManager.MediaService>, AppleTvLiar.MediaManager.MediaService {
        
        public MediaServiceClient() {
        }
        
        public MediaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MediaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MediaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MediaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AppleTvLiar.MediaManager.MediaImageType[] GetMediaImageTypes() {
            return base.Channel.GetMediaImageTypes();
        }
        
        public System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaImageType[]> GetMediaImageTypesAsync() {
            return base.Channel.GetMediaImageTypesAsync();
        }
        
        public string MediaImageUrlTemplate(int siteID) {
            return base.Channel.MediaImageUrlTemplate(siteID);
        }
        
        public System.Threading.Tasks.Task<string> MediaImageUrlTemplateAsync(int siteID) {
            return base.Channel.MediaImageUrlTemplateAsync(siteID);
        }
        
        public AppleTvLiar.MediaManager.MediaStream GetClientStreamUri(string sessionID, AppleTvLiar.MediaManager.MediaRequest mediaRequest) {
            return base.Channel.GetClientStreamUri(sessionID, mediaRequest);
        }
        
        public System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaStream> GetClientStreamUriAsync(string sessionID, AppleTvLiar.MediaManager.MediaRequest mediaRequest) {
            return base.Channel.GetClientStreamUriAsync(sessionID, mediaRequest);
        }
        
        public AppleTvLiar.MediaManager.MediaStream GetAppStreamUri(int siteID, string appName, AppleTvLiar.MediaManager.MediaRequest mediaRequest) {
            return base.Channel.GetAppStreamUri(siteID, appName, mediaRequest);
        }
        
        public System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaStream> GetAppStreamUriAsync(int siteID, string appName, AppleTvLiar.MediaManager.MediaRequest mediaRequest) {
            return base.Channel.GetAppStreamUriAsync(siteID, appName, mediaRequest);
        }
        
        public int GetUTCOffset(string sTimeZone) {
            return base.Channel.GetUTCOffset(sTimeZone);
        }
        
        public System.Threading.Tasks.Task<int> GetUTCOffsetAsync(string sTimeZone) {
            return base.Channel.GetUTCOffsetAsync(sTimeZone);
        }
        
        public string[] GetMediaZones() {
            return base.Channel.GetMediaZones();
        }
        
        public System.Threading.Tasks.Task<string[]> GetMediaZonesAsync() {
            return base.Channel.GetMediaZonesAsync();
        }
        
        public AppleTvLiar.MediaManager.MediaTimeZone[] GetMediaZoneInfo() {
            return base.Channel.GetMediaZoneInfo();
        }
        
        public System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaTimeZone[]> GetMediaZoneInfoAsync() {
            return base.Channel.GetMediaZoneInfoAsync();
        }
        
        public AppleTvLiar.MediaManager.MediaFormat[] SupportedMediaFormats() {
            return base.Channel.SupportedMediaFormats();
        }
        
        public System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaFormat[]> SupportedMediaFormatsAsync() {
            return base.Channel.SupportedMediaFormatsAsync();
        }
        
        public AppleTvLiar.MediaManager.BalancingArea[] BalancingAreas() {
            return base.Channel.BalancingAreas();
        }
        
        public System.Threading.Tasks.Task<AppleTvLiar.MediaManager.BalancingArea[]> BalancingAreasAsync() {
            return base.Channel.BalancingAreasAsync();
        }
        
        public AppleTvLiar.MediaManager.DeliveryNetwork[] DeliveryNetworks() {
            return base.Channel.DeliveryNetworks();
        }
        
        public System.Threading.Tasks.Task<AppleTvLiar.MediaManager.DeliveryNetwork[]> DeliveryNetworksAsync() {
            return base.Channel.DeliveryNetworksAsync();
        }
        
        public AppleTvLiar.MediaManager.MediaLanguage[] GetAvailableLanguages(int siteID, string appName) {
            return base.Channel.GetAvailableLanguages(siteID, appName);
        }
        
        public System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaLanguage[]> GetAvailableLanguagesAsync(int siteID, string appName) {
            return base.Channel.GetAvailableLanguagesAsync(siteID, appName);
        }
        
        public string CountryCodeFromIP(string IP) {
            return base.Channel.CountryCodeFromIP(IP);
        }
        
        public System.Threading.Tasks.Task<string> CountryCodeFromIPAsync(string IP) {
            return base.Channel.CountryCodeFromIPAsync(IP);
        }
        
        public System.DateTime GetCurrentUtcTime() {
            return base.Channel.GetCurrentUtcTime();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetCurrentUtcTimeAsync() {
            return base.Channel.GetCurrentUtcTimeAsync();
        }
        
        public AppleTvLiar.MediaManager.MediaApp[] GetMediaApplications() {
            return base.Channel.GetMediaApplications();
        }
        
        public System.Threading.Tasks.Task<AppleTvLiar.MediaManager.MediaApp[]> GetMediaApplicationsAsync() {
            return base.Channel.GetMediaApplicationsAsync();
        }
        
        public bool StreamProgress(string sessionID, AppleTvLiar.MediaManager.ProtoItemPos item) {
            return base.Channel.StreamProgress(sessionID, item);
        }
        
        public System.Threading.Tasks.Task<bool> StreamProgressAsync(string sessionID, AppleTvLiar.MediaManager.ProtoItemPos item) {
            return base.Channel.StreamProgressAsync(sessionID, item);
        }
    }
}
